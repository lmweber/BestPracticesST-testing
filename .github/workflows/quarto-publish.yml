name: render-and-publish

on:
  push:
  pull_request:

jobs:
  build-deploy:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    container: ${{ matrix.config.cont }}

    permissions:
      contents: write

    strategy:
      fail-fast: false
      matrix:
        config:
          - { os: ubuntu-latest, quarto: 1.4.329, r: 4.3, bioc: 3.17, cont: "bioconductor/bioconductor_docker:RELEASE_3_17", rspm: "https://packagemanager.rstudio.com/cran/__linux__/jammy/latest" }

    env:
      R_REMOTES_NO_ERRORS_FROM_WARNINGS: true
      RSPM: ${{ matrix.config.rspm }}
      NOT_CRAN: true
      TZ: UTC
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      cache-version: 'cache-v1'

    steps:

      - name: Set R library home (Linux)
        run: |
          mkdir /__w/_temp/Library
          echo ".libPaths('/__w/_temp/Library')" > ~/.Rprofile
        ##

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Quarto
        uses: quarto-dev/quarto-actions/setup@v2
        with:
          tinytex: true
          version: ${{ matrix.config.quarto }}  ## need to specify version when using containers

#      - name: Query dependencies
#        run: |
#          install.packages('remotes')
#          saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
#        shell: Rscript {0}
#
#      - name: Cache R packages on Linux
#        uses: actions/cache@v3
#        with:
#          path: /home/runner/work/_temp/Library
#          key: ${{ env.cache-version }}-${{ runner.os }}-biocversion-RELEASE_3_17-r-4.3-${{ hashFiles('.github/depends.Rds') }}
#          restore-keys: ${{ env.cache-version }}-${{ runner.os }}-biocversion-RELEASE_3_17-r-4.3-
#
#      - name: Install Linux system dependencies
#        run: |
#          sysreqs=$(Rscript -e 'cat("apt-get update -y && apt-get install -y", paste(gsub("apt-get install -y ", "", remotes::system_requirements("ubuntu", "20.04")), collapse = " "))')
#          echo $sysreqs
#          sudo -s eval "$sysreqs"
#
#      - name: Install BiocManager
#        run: |
#          remotes::install_cran("BiocManager")
#        shell: Rscript {0}
#
#      - name: Set BiocVersion
#        run: |
#          BiocManager::install(version = "${{ matrix.config.bioc }}", ask = FALSE, force = TRUE)
#        shell: Rscript {0}
#
#      - name: Install dependencies pass 1
#        run: |
#          ## For running the checks
#          message(paste('****', Sys.time(), 'installing rcmdcheck and BiocCheck ****'))
#          install.packages(c("rcmdcheck", "BiocCheck"), repos = BiocManager::repositories())
#
#          ## Pass #1 at installing dependencies
#          message(paste('****', Sys.time(), 'pass number 1 at installing dependencies: local dependencies ****'))
#          remotes::install_local(dependencies = TRUE, repos = BiocManager::repositories(), build_vignettes = FALSE, upgrade = TRUE)
#
#          ## Any additional packages under active development
#          # remotes::install_github("lmweber/ggspavis", repos = gha_repos)
#        continue-on-error: true
#        shell: Rscript {0}
#
#      - name: Install dependencies pass 2
#        run: |
#          ## Pass #2 at installing dependencies
#          message(paste('****', Sys.time(), 'pass number 2 at installing dependencies: any remaining dependencies ****'))
#          remotes::install_local(dependencies = TRUE, repos = BiocManager::repositories(), build_vignettes = TRUE, upgrade = TRUE, force = TRUE)
#        shell: Rscript {0}
#
#      - name: Session info
#        run: |
#          options(width = 100)
#          pkgs <- installed.packages()[, "Package"]
#          sessioninfo::session_info(pkgs, include_base = TRUE)
#        shell: Rscript {0}

      - name: Publish to GitHub Pages (and render)
        uses: quarto-dev/quarto-actions/publish@v2
        with:
          target: gh-pages
          version: ${{ matrix.config.quarto }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
